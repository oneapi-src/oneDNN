# *******************************************************************************
# Copyright 2024 Arm Limited and affiliates.
# Copyright 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# *******************************************************************************

name: "PR Linters"

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

# Declare default permissions as read only.
permissions: read-all

# Kill stale checks
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  pr-commits:
    name: "Commit messages"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Check commit messages
        run: python3 ./.github/automation/commit-msg-check.py "${{ github.event.pull_request.head.sha }}" "${{ github.event.pull_request.base.sha }}"

  pr-clang-format:
    name: "Clang-Format"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install clang-format
        run: sudo apt update && sudo apt install -y "clang-format-11"
      - name: Check code formatting
        run: .github/automation/clang-format.sh

  pr-format-tags:
    name: Format tags consistency
    runs-on: ubuntu-latest
    steps:
      - name: Checkout oneDNN
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: source

      - name: Install clang
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libomp-dev

      - name: Install castxml package
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --no-cache-dir --disable-pip-version-check castxml

      - name: Configure oneDNN
        run: .github/automation/x64/build_linters.sh
        working-directory: ${{ github.workspace }}/source
        env:
          ONEDNN_ACTION: configure

      - name: Check format-tags
        run: |
          venv/bin/castxml --castxml-cc-gnu-c clang --castxml-output=1 -I${{ github.workspace }}/source/include -I${{ github.workspace }}/build/include ${{ github.workspace }}/source/include/oneapi/dnnl/dnnl_types.h -o ${{ github.workspace }}/types.xml
          python ${{ github.workspace }}/source/scripts/generate_dnnl_debug.py ${{ github.workspace }}/types.xml
          python ${{ github.workspace }}/source/scripts/generate_format_tags.py
          cd ${{ github.workspace }}/source/
          git diff | grep . && exit 1 || true

  pr-status:
    name: "Formatting"
    runs-on: ubuntu-latest
    needs: [ pr-commits, pr-clang-format, pr-format-tags ]
    steps:
      - name: Print success
        run: echo "Success"