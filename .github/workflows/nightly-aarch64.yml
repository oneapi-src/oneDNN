# *******************************************************************************
# Copyright 2024-2025 Arm Limited and affiliates.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# *******************************************************************************

name: "Nightly AArch64"

on:
  #* allow manual trigger of workflow when needed. Useful for a nightly.
  workflow_dispatch:
  schedule:
    #* minute (0-59) hour (0-23) day (1-31) month (1-12)  day of the week (0 - 6)
    #* cron jobs run on the default (main) branch.
    #* set to run at 5am UCT
  - cron: "0 5 * * *"

#* Stop stale workflows, though we should never hit this unless it hangs for a whole day.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Declare default permissions as read only.
permissions: read-all

jobs:
  build-and-test:
    strategy:
      matrix:
        config: [
          { name: c6g, label: ah-ubuntu_22_04-c6g_8x-100, threading: OMP, toolset: gcc, build: Release, testset: NIGHTLY },
          { name: c7g, label: ah-ubuntu_22_04-c7g_8x-100, threading: OMP, toolset: gcc, build: Release, testset: NIGHTLY }
        ]

    name: ${{ matrix.config.name }}, ${{ matrix.config.toolset }}, ${{ matrix.config.threading }}, ${{ matrix.config.build }}
    runs-on: ${{ matrix.config.label }}
    steps:

      - name: Checkout oneDNN
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: oneDNN

      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@5f6e04f5267c8133f1273bf2103583fc72c46b17 # v3.31.5
        with:
          cmakeVersion: 3.31.0
          ninjaVersion: 1.12.0

      - if: ${{ matrix.config.threading == 'OMP' }}
        name: Install openmp
        run: |
          sudo apt install -y libomp-dev

      - name: Read version file
        id: get-versions
        run: |
          content=`cat ${{ github.workspace }}/oneDNN/.github/automation/ci-aarch64.json`
          content="${content//[$'\t\r\n$ ']}"
          echo "output=$content" >> $GITHUB_OUTPUT

      - name: Install gcc
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update -y
          sudo apt install -y g++-${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}

      - name: Clone ACL
        run: ${{ github.workspace }}/oneDNN/.github/automation/build_acl.sh
        env:
          ACL_ACTION: clone
          ACL_ROOT_DIR: ${{ github.workspace }}/ComputeLibrary
          ACL_VERSION: ${{ fromJson(steps.get-versions.outputs.output).dependencies.acl }}

      - name: Configure ACL
        run: ${{ github.workspace }}/oneDNN/.github/automation/build_acl.sh
        env:
          ACL_ACTION: configure
          ACL_ROOT_DIR: ${{ github.workspace }}/ComputeLibrary
          ACL_THREADING: ${{ matrix.config.threading }}
          BUILD_TOOLSET: ${{ matrix.config.toolset }}
          CMAKE_BUILD_TYPE: ${{ matrix.config.build }}
          CMAKE_GENERATOR: Ninja
          GCC_VERSION: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}

      - name: Build ACL
        run: ${{ github.workspace }}/oneDNN/.github/automation/build_acl.sh
        env:
          ACL_ACTION: build

      - name: Configure oneDNN
        run: ${{ github.workspace }}/oneDNN/.github/automation/build_aarch64.sh
        working-directory: ${{ github.workspace }}/oneDNN
        env:
          ACL_ROOT_DIR: ${{ github.workspace }}/ComputeLibrary
          BUILD_TOOLSET: ${{ matrix.config.toolset }}
          CMAKE_BUILD_TYPE: ${{ matrix.config.build }}
          CMAKE_GENERATOR: Ninja
          GCC_VERSION: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}
          ONEDNN_ACTION: configure
          ONEDNN_TEST_SET: ${{ matrix.config.testset }}
          ONEDNN_THREADING: ${{ matrix.config.threading }}

      - name: Build oneDNN
        run: ${{ github.workspace }}/oneDNN/.github/automation/build_aarch64.sh
        working-directory: ${{ github.workspace }}/oneDNN
        env:
          ONEDNN_ACTION: build

      - name: Run oneDNN tests
        run: ${{ github.workspace }}/oneDNN/.github/automation/test_aarch64.sh
        working-directory: ${{ github.workspace }}/oneDNN/build
        env:
          BUILD_TOOLSET: ${{ matrix.config.toolset }}
          CMAKE_BUILD_TYPE: ${{ matrix.config.build }}
          CTEST_PARALLEL_LEVEL: 8
          DYLD_LIBRARY_PATH: ${{ github.workspace }}/ComputeLibrary/build
          ONEDNN_THREADING: ${{ matrix.config.threading }}

  #* This job adds a check named "Nightly AArch64" that represents overall
  #* workflow status and can be used in branch rulesets
  status:
    needs: build-and-test
    runs-on: ubuntu-latest
    name: "Nightly AArch64"
    steps:
      - name: Print success
        run: echo Success
