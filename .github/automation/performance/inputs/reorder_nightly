# *******************************************************************************
# Copyright 2025 Arm Limited and affiliates.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# *******************************************************************************

#
# f32 <-> s32 <-> s8 <-> u8
#
--reset
--sdt=f32,s32,s8,u8
--ddt=f32,s32,s8,u8

--attr-scales=src:per_dim_1
--stag=abx,axb,aBx4b,aBx8b,aBx16b
--dtag=abx,axb,aBx8b,aBx16b
2x64x3x3

--stag=abx,axb,aBx16b
--dtag=abx,axb,aBx16b
--attr-scales=,src:per_dim_1
--attr-post-ops=sum:0.5
2x64x1x1

--attr-scales=src:per_dim_0
--stag=abx,xba
--dtag=abx,xba
2x64x3x3

# blocked with tail
--stag=aBx4b,aBx8b --dtag=aBx16b 2x40x3x3
--stag=aBx16b      --dtag=aBx8b  2x40x3x3

--stag=abx,axb,aBx4b,aBx8b,aBx16b
--dtag=abx,axb,aBx4b,aBx8b,aBx16b
2x64x3x3

--stag=abx,xba
--dtag=abx,xba
2x64x3x3

# Matmul blocked B layouts
--sdt=f32 --ddt=f32
--stag=ab,ba --dtag=BA16a16b,BA16a32b,BA16a48b,BA16a64b 89x73
--dtag=ab,ba --stag=BA16a16b,BA16a32b,BA16a48b,BA16a64b 89x73
--stag=abc,acb --dtag=aCB16b16c,aCB16b32c,aCB16b48c,aCB16b64c 57x89x73
--dtag=abc,acb --stag=aCB16b16c,aCB16b32c,aCB16b48c,aCB16b64c 57x89x73

# simple nChw{8,16}c impl
--sdt=f32 --ddt=f32
--stag=aBx4b,aBx8b --dtag=aBx16b 2x71x16x16 2x72x16x16 2x73x16x16
--stag=aBx16b      --dtag=aBx8b  2x71x16x16 2x72x16x16 2x73x16x16

# test if jit kernels properly handle corner cases:
# * large stride problems
# * huge dimensions (UINT_MAX + 1)
--reset
--skip-impl=ref,simple # ! test jit version only
--sdt=f32 --ddt=f32
--stag=abx --dtag=aBx8b 2x16x19200x19200
--skip-impl=
1x4294967296x1

# f16
--batch=test_reorder_float16

# bf16
--batch=test_reorder_bfloat16

# Regression
--batch=harness_reorder_regression
