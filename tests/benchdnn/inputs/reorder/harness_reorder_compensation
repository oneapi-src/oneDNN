# f32 -> s8 w/ scales and compensations
--reset
--sdt=f32
--ddt=s8
--attr-oscale=,common:2,per_dim_0:2,per_dim_1:3,per_dim_01:3,per_tensor:0.7
--oflag=,s8s8_comp:1,zp_comp:1,s8s8_comp:1+zp_comp:1
--stag=abx,xba,bxa
--dtag=xba,ABx2b8a4b,ABx4a4b,ABx4b16a4b,ABx4b32a4b,ABx4b64a4b
32x32x3
32x32x3x3 80x24x3x5
32x32x3x3x3


# s8, bf16 -> s8 w/ compensations
--sdt=bf16,s8
--ddt=s8

# Non-grouped cases
--attr-oscale=,common:2
--oflag=,s8s8_comp:1,zp_comp:1,s8s8_comp:1+zp_comp:1
--stag=abx,xba,bxa
--dtag=xba,ABx2b8a4b,ABx4a4b,ABx4b16a4b,ABx4b32a4b,ABx4b64a4b
32x32x3
32x32x3x3 80x24x3x5
32x32x3x3x3

# test for all sdt data types
--sdt=f32,bf16,s8
# Special case: no general 0D-spatial support
--dtag=ABx4b16a4b,ABx4b32a4b,ABx4b64a4b
80x24
--attr-oscale=per_dim_01:1 --dtag=ABc2b8a4b 4x4x1

# Following tags have no s8s8 compensation support.
--attr-oscale=
--oflag=,zp_comp:1
## Special case: no general 3D-spatial support
--dtag=AxB16a4b,ABx16b16a4b
32x32x3
32x32x3x3 80x24x3x5
## Special case: reduced-lowering
--dtag=Acb16a 32x32x3
--dtag=Adcb16a 32x32x3x3

# Grouped cases
--attr-oscale=,common:2
--oflag=,s8s8_comp:3,zp_comp:3,s8s8_comp:3+zp_comp:3
--stag=abx,xcab
--dtag=xcab        2x32x32x3 2x32x32x3x3 16x32x32x3x3x3
# Special case: no general 3D support for AMX and depthwise
--dtag=aBCx4c16b4c 2x32x32x3 2x32x32x3x3
--dtag=aBCx4b4c    2x36x36x3 2x36x36x3x3 2x35x35x3x3
--dtag=aBCx2c8b4c  2x40x40x3 2x40x40x3x3
--dtag=Abcx16a,Abcx8a,Abcx4a 64x1x1x3 512x1x1x3x3 3x2x2x3

# Following tags have no s8s8 compensation support.
--attr-oscale=
--oflag=,zp_comp:3
## Special case: no general 3D support for AMX and depthwise
--dtag=aBxC16b4c,aBCx16c16b4c 2x32x32x3 2x32x32x3x3
## Special case: reduced-lowering
--dtag=aBdc16b 2x32x32x3
--dtag=aBedc16b 2x32x32x3x3


# Matmul compensations
--sdt=f32,bf16,s8
--ddt=s8

--oflag=s8s8_comp:2,zp_comp:2,s8s8_comp:2+zp_comp:2
--stag=ab,ba --dtag=BA16a16b4a,BA16a32b4a,BA16a48b4a,BA16a64b4a
64x64 89x73
