/*******************************************************************************
* Copyright 2019-2024 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include <cassert>
#include <string>
#include <unordered_map>
#include <vector>

#include   "gpu/intel/ocl/kernel_utils.hpp"

namespace dnnl {
namespace impl {
namespace gpu {
namespace intel {
namespace ocl {

@KER_LIST_EXTERN@
@KER_HEADERS_EXTERN@

const char *get_kernel_source(const char *name) {
    static const std::unordered_map<std::string, const char *> kernel_list = {
        @KER_LIST_ENTRIES@
    };

    if (!name) return nullptr;

    assert(kernel_list.count(name) == 1);
    return kernel_list.at(name);
}

const char *get_kernel_header(const std::string &name) {
    static const std::unordered_map<std::string, const char *> kernel_header_list ={
        @KER_HEADER_LIST_ENTRIES@
    };

    assert(kernel_header_list.count(name) == 1);
    return kernel_header_list.at(name);
}

} // namespace ocl
} // namespace intel
} // namespace gpu
} // namespace impl
} // namespace dnnl
